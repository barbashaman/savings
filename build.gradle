plugins {
    id 'java'
}

group 'br.com.sicredi'
version '1.0-SNAPSHOT'

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenCentral()
}

dependencies {
    testImplementation('org.junit.jupiter:junit-jupiter:5.4.0')
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'io.rest-assured', name: 'rest-assured', version: '3.0.0'
    compile 'javax.xml.bind:jaxb-api:2.3.0'
    compile 'com.fasterxml.jackson.core:jackson-core:2.6.3'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.6.3'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.6.3'
}

test {

    description = 'Executa testes. Para executar tags especÃ­ficas, use: gradle clean test -Dtag="tag".'

    String tag = System.properties.getProperty("tag")
    systemProperties = [
            'junit.jupiter.extensions.autodetection.enabled': 'true',
            'junit.jupiter.testinstance.lifecycle.default'  : 'per_class'
    ]

    useJUnitPlatform() {

        if (null != tag && !tag.equalsIgnoreCase("")) includeTags String.valueOf(tag)
    }

    testLogging {
        events 'PASSED', 'FAILED', 'SKIPPED'
    }

    beforeTest { descriptor ->
        logger.lifecycle("Running test: ${descriptor}")
    }
    afterSuite { desc, result ->
        if (!desc.parent) {
            println "\nTest result: ${result.resultType}"
            println "Test summary: ${result.testCount} tests, " +
                    "${result.successfulTestCount} succeeded, " +
                    "${result.failedTestCount} failed, " +
                    "${result.skippedTestCount} skipped"
        }
    }

}
